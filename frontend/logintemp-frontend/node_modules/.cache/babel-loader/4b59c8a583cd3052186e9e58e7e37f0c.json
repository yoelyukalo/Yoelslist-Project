{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/YOELY/dev/flatiron/phase4labs/Yoelslist/frontend/logintemp-frontend/src/MyPosts.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport EachPosts from './EachPosts';\nimport MyPost from './MyPost';\n\nclass MyPosts extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDelete = selectedPost => {\n      console.log('delete function in App');\n      console.log(selectedPost); // this.setState({\n      //   airlines: this.state.airlines.filter((airline) => airline != selectedAirline)\n      // })\n      //not sure how to make id specific to post\n\n      fetch(`http://localhost:3000/posts/${selectedPost.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    };\n\n    this.updatePost = e => {\n      e.preventDefault();\n      e.target.reset(); // const { title, cost, body };\n      // const post = { title, cost, body };\n\n      let updatedPost = {\n        title: e.target.title.value,\n        pic: e.target.pic.value,\n        body: e.target.body.value,\n        cost: e.target.cost.value,\n        user_id: this.props.user.id\n      };\n      fetch(`http://localhost:3000/posts/${this.props.post.id}`, {\n        method: \"PATCH\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedPost)\n      }); // .then((r) => r.json())\n      // .then((response) => {\n      //   console.log(response);\n      //   // localStorage.token = response.jwt;\n      //   // this.props.setCurrentUser(response.user);\n      // });\n    };\n  }\n\n  // Logic needed to render posts that user created\n  // this.props.posts.user.id == this.props.user.id\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"n\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"My Posts\"), this.props.posts.filter(things => things.user_id == this.props.user).map(post => /*#__PURE__*/React.createElement(MyPost, {\n      key: post.id,\n      post: post,\n      user: this.props.user,\n      updatePost: this.updatePost,\n      handleDelete: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 99\n      }\n    })));\n  }\n\n}\n\nexport default MyPosts;","map":{"version":3,"sources":["/mnt/c/Users/YOELY/dev/flatiron/phase4labs/Yoelslist/frontend/logintemp-frontend/src/MyPosts.js"],"names":["React","Component","Redirect","EachPosts","MyPost","MyPosts","handleDelete","selectedPost","console","log","fetch","id","method","headers","Accept","updatePost","e","preventDefault","target","reset","updatedPost","title","value","pic","body","cost","user_id","props","user","post","JSON","stringify","render","posts","filter","things","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAE9BK,YAF8B,GAEdC,YAAD,IAAkB;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EAF+B,CAI/B;AACA;AACA;AAEA;;AACAG,MAAAA,KAAK,CAAE,+BAA8BH,YAAY,CAACI,EAAG,EAAhD,EAAmD;AAClDC,QAAAA,MAAM,EAAE,QAD0C;AAElDC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT;AAFyC,OAAnD,CAAL;AAOD,KAlB6B;;AAAA,SA0B5BC,UA1B4B,GA0BdC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACAD,MAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,GAFgB,CAIhB;AACA;;AAEA,UAAIC,WAAW,GAAG;AAChBC,QAAAA,KAAK,EAAEL,CAAC,CAACE,MAAF,CAASG,KAAT,CAAeC,KADN;AAEhBC,QAAAA,GAAG,EAAEP,CAAC,CAACE,MAAF,CAASK,GAAT,CAAaD,KAFF;AAGhBE,QAAAA,IAAI,EAAER,CAAC,CAACE,MAAF,CAASM,IAAT,CAAcF,KAHJ;AAIhBG,QAAAA,IAAI,EAAET,CAAC,CAACE,MAAF,CAASO,IAAT,CAAcH,KAJJ;AAKhBI,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBjB;AALT,OAAlB;AAQAD,MAAAA,KAAK,CAAE,+BAA8B,KAAKiB,KAAL,CAAWE,IAAX,CAAgBlB,EAAG,EAAnD,EAAsD;AACzDC,QAAAA,MAAM,EAAE,OADiD;AAEzDC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT,SAFgD;AAMzDU,QAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAgBX,WAAhB;AANmD,OAAtD,CAAL,CAfgB,CAyBd;AACA;AAEA;AACA;AACA;AACA;AACH,KA1DyB;AAAA;;AA4D1B;AACA;AAEFY,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAK,MAAA,SAAS,EAAE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADN,EAEO,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,MAAM,IAAIA,MAAM,CAACT,OAAP,IAAkB,KAAKC,KAAL,CAAWC,IAA/D,EAAqEQ,GAArE,CAAyEP,IAAI,iBAAI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAAClB,EAAlB;AAAsB,MAAA,IAAI,EAAEkB,IAA5B;AAAkC,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAAnD;AAAyD,MAAA,UAAU,EAAE,KAAKb,UAA1E;AAAsF,MAAA,YAAY,EAAE,KAAKT,YAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjF,CAFP,CADF;AAOH;;AAvE2B;;AA0EhC,eAAeD,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport EachPosts from './EachPosts';\nimport MyPost from './MyPost';\n\nclass MyPosts extends Component {\n\n  handleDelete = (selectedPost) => {\n    console.log('delete function in App')\n    console.log(selectedPost)\n\n    // this.setState({\n    //   airlines: this.state.airlines.filter((airline) => airline != selectedAirline)\n    // })\n\n    //not sure how to make id specific to post\n    fetch(`http://localhost:3000/posts/${selectedPost.id}`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          }\n        })\n  }\n\n  // UsersPosts = (props) => {\n  //   allposts: [],\n  //   this.props.posts\n  // }\n    \n\n    updatePost = (e) => {\n        e.preventDefault();\n        e.target.reset();\n    \n        // const { title, cost, body };\n        // const post = { title, cost, body };\n\n        let updatedPost = {\n          title: e.target.title.value,\n          pic: e.target.pic.value,\n          body: e.target.body.value, \n          cost: e.target.cost.value,\n          user_id: this.props.user.id\n        };\n\n        fetch(`http://localhost:3000/posts/${this.props.post.id}`, {\n          method: \"PATCH\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify( updatedPost ),\n        })\n\n\n          // .then((r) => r.json())\n          // .then((response) => {\n\n          //   console.log(response);\n          //   // localStorage.token = response.jwt;\n          //   // this.props.setCurrentUser(response.user);\n          // });\n      };\n\n      // Logic needed to render posts that user created\n      // this.props.posts.user.id == this.props.user.id\n\n    render(){\n        return(\n          <div className= \"n\">\n                <h1>My Posts</h1>\n                {this.props.posts.filter(things => things.user_id == this.props.user).map(post => <MyPost key={post.id} post={post} user={this.props.user} updatePost={this.updatePost} handleDelete={this.handleDelete}/>)}\n\n            </div>\n        );\n    }\n}\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}