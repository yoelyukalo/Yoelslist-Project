{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/YOELY/dev/flatiron/phase4labs/Yoelslist/frontend/logintemp-frontend/src/Posts.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport EachPosts from './EachPosts';\n\nfunction Posts(props) {\n  state = {\n    posts: [],\n    currentPost: this.props.posts[0],\n    date: \"\"\n  };\n\n  createNewMenu = () => {\n    fetch(`http://localhost:3000/posts`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post: {\n          week: this.state.date\n        },\n        user_id: this.props.user\n      })\n    });\n  };\n\n  handleChange = event => {\n    let date = event.target.valueAsDate.toString();\n    let day = date[8] + date[9];\n    let newDate = date.replace(\"GMT-0500 (Central Daylight Time)\", \"\").replace(\"Sun \", \"\").replace(\" 19:00:00\", \"\").replace(day, parseInt(day) + 1);\n    let altDate = (newDate + `- ${newDate[0] + newDate[1] + newDate[2]} ${parseInt(day) + 7} 2020`).toString();\n    this.setState({\n      date: altDate\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"All Posts\"), props.posts.map(post => /*#__PURE__*/React.createElement(EachPosts, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 42\n    }\n  })));\n}\n\nexport default Posts;","map":{"version":3,"sources":["/mnt/c/Users/YOELY/dev/flatiron/phase4labs/Yoelslist/frontend/logintemp-frontend/src/Posts.js"],"names":["React","Component","Redirect","BrowserRouter","Switch","Route","Link","EachPosts","Posts","props","state","posts","currentPost","date","createNewMenu","fetch","method","headers","body","JSON","stringify","post","week","user_id","user","handleChange","event","target","valueAsDate","toString","day","newDate","replace","parseInt","altDate","setState","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,IAAvC,QAAmD,kBAAnD;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAEjBC,EAAAA,KAAK,GAAG;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAFT;AAGJE,IAAAA,IAAI,EAAE;AAHF,GAAR;;AAMAC,EAAAA,aAAa,GAAG,MAAM;AAClBC,IAAAA,KAAK,CAAE,6BAAF,EAAgC;AACjCC,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWG;AAAnB,SADW;AAEjBU,QAAAA,OAAO,EAAE,KAAKd,KAAL,CAAWe;AAFH,OAAf;AAN2B,KAAhC,CAAL;AAWH,GAZD;;AAcAC,EAAAA,YAAY,GAAIC,KAAD,IAAW;AACtB,QAAIb,IAAI,GAAGa,KAAK,CAACC,MAAN,CAAaC,WAAb,CAAyBC,QAAzB,EAAX;AACA,QAAIC,GAAG,GAAGjB,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAxB;AACA,QAAIkB,OAAO,GAAGlB,IAAI,CAACmB,OAAL,CAAa,kCAAb,EAAiD,EAAjD,EAAqDA,OAArD,CAA6D,MAA7D,EAAqE,EAArE,EACTA,OADS,CACD,WADC,EACY,EADZ,EAETA,OAFS,CAEDF,GAFC,EAEIG,QAAQ,CAACH,GAAD,CAAR,GAAgB,CAFpB,CAAd;AAGA,QAAII,OAAO,GAAG,CAACH,OAAO,GAAI,KAAIA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAApB,GAA0BA,OAAO,CAAC,CAAD,CAAI,IAAGE,QAAQ,CAACH,GAAD,CAAR,GAAgB,CAAE,OAA1E,EAAkFD,QAAlF,EAAd;AACA,SAAKM,QAAL,CAAc;AAAEtB,MAAAA,IAAI,EAAEqB;AAAR,KAAd;AACH,GARD;;AAYI,sBACI;AAAK,IAAA,SAAS,EAAE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKzB,KAAK,CAACE,KAAN,CAAYyB,GAAZ,CAAgBf,IAAI,iBAAI,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,IAAI,CAACgB,EAArB;AAAyB,IAAA,IAAI,EAAEhB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAFL,CADJ;AASP;;AAED,eAAeb,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport EachPosts from './EachPosts'\n\nfunction Posts(props){\n\n    state = {\n        posts: [],\n        currentPost: this.props.posts[0],\n        date: \"\",\n    }\n\n    createNewMenu = () => {\n        fetch(`http://localhost:3000/posts`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                post: { week: this.state.date },\n                user_id: this.props.user\n            })\n        })\n    }\n\n    handleChange = (event) => {\n        let date = event.target.valueAsDate.toString();\n        let day = date[8] + date[9];\n        let newDate = date.replace(\"GMT-0500 (Central Daylight Time)\", \"\").replace(\"Sun \", \"\")\n            .replace(\" 19:00:00\", \"\")\n            .replace(day, parseInt(day) + 1);\n        let altDate = (newDate + `- ${newDate[0] + newDate[1] + newDate[2]} ${parseInt(day) + 7} 2020`).toString();\n        this.setState({ date: altDate });\n    }\n\n\n    \n        return(\n            <div className= \"n\">\n                <h1>All Posts</h1>\n                {props.posts.map(post => <EachPosts key={post.id} post={post}/>)}\n\n            </div>\n        )\n    \n\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}